#include "paiments.h"
#include <QSqlQuery>
#include "connection.h"
#include <QDebug>
#include <QObject>
#include <QMessageBox>


paiments::paiments()
{
    id_don=111111;
    nom_donateur="";
    prenom_donateur="";
    type_don="TEST";
    mail_donateur="test@gmail.com";
}

paiments::paiments(int idd,QString nd,QString pd,QString t,QString md)
{
    id_don=idd;
    nom_donateur=nd;
    prenom_donateur=pd;
    type_don=t;
    mail_donateur=md;
}
int paiments:: get_id_don()
{
   return id_don;
}
QString paiments:: get_nom_donateur()
{
    return nom_donateur;
}
QString paiments:: get_prenom_donateur()
{
    return prenom_donateur;
}
QString paiments:: get_type_don()
{
    return type_don;
}
QString paiments:: get_mail_donateur()
{
    return mail_donateur;
}
void paiments::set_nom_donateur(QString new_nom)
{nom_donateur=new_nom;}
void paiments::set_prenom_donateur(QString new_prenom)
{prenom_donateur=new_prenom;}
void paiments::set_type_don(QString new_type)
{type_don=new_type;}
void paiments::set_mail_donateur(QString new_mail)
{mail_donateur=new_mail;}
//CRUDs
bool paiments::ajouter()
{
    QSqlQuery query;
    //QString res_ = QString::number(cin);

    query.prepare("insert into don (id_don, nom_donateur, prenom_donateur, type_don, mail_donateur)" "values(:id_don, :nom_donateur, :prenom_donateur, :type_don, :mail_donateur)");

    //Création des variables liées
    query.bindValue(":id_don",id_don);
    query.bindValue(":nom_donateur",nom_donateur);
    query.bindValue(":prenom_donateur",prenom_donateur);
    query.bindValue(":type_don",type_don);
    query.bindValue(":mail_donateur",mail_donateur);


    return query.exec();//exec() envoie la requete pour l'exécuter

}
QSqlQueryModel* paiments::afficher()
{
    QSqlQueryModel* model=new QSqlQueryModel();

          model->setQuery("SELECT* FROM paiments");
          model->setHeaderData(0, Qt::Horizontal, QObject::tr("id don"));
          model->setHeaderData(1, Qt::Horizontal, QObject::tr("Nom donateur"));
          model->setHeaderData(2, Qt::Horizontal, QObject::tr("Prenom donateur"));
          model->setHeaderData(3, Qt::Horizontal, QObject::tr("Type don"));
          model->setHeaderData(4, Qt::Horizontal, QObject::tr("Mail donateur"));
         // model->setHeaderData(5, Qt::Horizontal, QObject::tr("Cin"));
    return model;
}
bool paiments::modifier(int id_don)
    {
    QSqlQuery query;
     query.prepare("Update paiments set nom_donateur= :nom_donateur , prenom_donateur=:prenom_donateur , type_don= :type_don , mail_donateur= :mail_donateur   where id_don= :id_don ");
     query.bindValue(":id_don",id_don);
     query.bindValue(":nom_donateur", nom_donateur);
     query.bindValue(":prenom_donateur", prenom_donateur);
     query.bindValue(":type_don", type_don);
     query.bindValue(":mail_donateur", mail_donateur);
    // query.bindValue(":CIN", CIN);

    return query.exec();
    }
bool paiments::supprimer(int idd)
{
    QSqlQuery query;
          query.prepare("Delete from paiments where id_don=:idd" );
          query.bindValue(0, idd);
    return query.exec();
}
